---
import Main from '../../layouts/main.astro';
import Metrics from '../../components/blogPostMetrics.astro'
import TOC from '../../components/TableOfContent.astro'
import BlogStyle from '../../components/blogPostStyle.astro'
import CopyCodeSnippet from '../../components/CopyCodeSnippet.astro'

import { CollectionEntry, getCollection } from 'astro:content';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection('posts', (post)=>{
    // if(import.meta.env.MODE === 'development'){
    //     return true;
    // }
    return !post.data.draft
  });
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const post:CollectionEntry<"posts"> = Astro.props.entry;
let { 
    data: {
        lang, title, seo_title, description, seo_description,
        image, date, seo_date, author, category, draft,
        keywords=[], todos=[]
    },
    slug,
    body,
    render
} = post;
const { Content, headings } = await render();

// set defaults
title ??= seo_title;
description ??= seo_description;
date ??= `${seo_date}`;
author ??= 'Anas Ouardini';
draft ??= false;
lang ??= "en_US"

// don't remove: used in Json+ld
const wordCount = body.split(' ').length;
const readingSpeed = 300; // words per minute
const readingTime = Math.round(wordCount/readingSpeed); // minutes

import tools from '../../tools'
---

<Main
    {lang} {title} seo_title={`${seo_title} - ${author}`} {slug} {description}
    {seo_description} type="BlogPosting"
    {author} {date} {seo_date} {category} {draft} {readingTime} >

    <main class="flex flex-col justify-between w-[90%] mx-auto max-w-[1000px] my-10">
        <!-- dynamically setting copy button for code snippets -->
        <CopyCodeSnippet />

        {/* Generic blog post styling */}
        <BlogStyle/>

        <article class="p-3">
            <h1 class="capitalize">{title}</h1>
            <p class="text-gray-500 text-xl">Published at
                <time datetime={`${seo_date}`} >{date}</time>
                by {author} â€” [ <span class="text-blue-400">{readingTime}m</span> read ]
            </p>
            <ul aria-label="categories" class="flex gap-3 p-0 bt-5 mb-10">
                {category.map((cat)=>
                    <li class={`list-none py-1 px-3 bg-red-400 text-black
                        font-bold tracking-wider w-max rounded-2xl`}>
                        {cat}
                    </li>)}
            </ul>

            {/* SEO metrics - only show up in DEV mode */}
            <Metrics {title} {seo_title} {description} {seo_description} {body}
                {keywords} {wordCount} {todos} />

            {/* Table Of Content */}
            <TOC {headings} />

            {
                image
                ? <figure class="featured"><img src={image.url} alt={image.alt} /></figure>
                : <></>
            }

            <Content/>
        </article>
    </main>
</Main>
